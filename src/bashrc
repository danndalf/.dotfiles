#
# .bashrc: executed by bash(1) for non-login shells.
#

# LANGUAGE: US English, UTF-8 default
export LANG=en_US.UTF-8

# HISTORY: Don't add duplicate lines to history file, keep it short
HISTCONTROL=ignoredups:ignorespace
HISTSIZE=1000
HISTFILESIZE=2000
shopt -s histappend

# LINE EDITING
set -o vi # Vi because Emacs keys collide with screen

# DIMENSIONS: Update LINES and COLUMNS after each command if necessary
shopt -s checkwinsize

# LESS: Make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# COLORS: Determine whether we're live in technicolo(u)r
if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	technicolor=rainbow

	export CLICOLOR=1
	export LSCOLORS=gxfxfxfxcxexexbxbxbxbx

	BLACK="\[\033[30m\]";
	RED="\[\033[31m\]";
	GREEN="\[\033[32m\]";
	YELLOW="\[\033[33m\]";
	BLUE="\[\033[34m\]";
	MAGENTA="\[\033[35m\]";
	CYAN="\[\033[36m\]";
	WHITE="\[\033[37m\]";

	BG_BLACK="\[\033[40m\]";
	BG_RED="\[\033[41m\]";
	BG_GREEN="\[\033[42m\]";
	BG_YELLOW="\[\033[43m\]";
	BG_BLUE="\[\033[44m\]";
	BG_MAGENTA="\[\033[45m\]";
	BG_CYAN="\[\033[46m\]";
	BG_WHITE="\[\033[47m\]";

	BOLD="\[\033[1m\]";
	INVERSE="\[\033[7m\]";
	RESET="\[\033[0m\]";

else
	technicolor=
fi

# ALIASES: 
if [ `uname` == 'Linux' ]; then
	if [ -n "$technicolor" ]; then
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
	fi
fi
alias ll='ls -ltAhr'

# TABS: Enable tab completion features if the host supports them
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi
## host local completions, e.g. Homebrew
if [ -d /usr/local/etc/bash_completion.d ] && ! shopt -oq posix; then
    for COMPLETE in /usr/local/etc/bash_completion.d/*;do
			source $COMPLETE
		done
fi

### PROMPT: A fancy prompt for fancy apes, for there are no fancier apes than we.
function make_prompt {
	
	### Show if we ave a nonzero exit status from the previous command
	EXITSTATUS="$?"
	if [ "$EXITSTATUS" -eq "0" ]; then
		STATUS=""
	else
		STATUS="${RED}ERR $EXITSTATUS\n"
	fi
	
	### When root, show username and host in red
	if [[ $EUID -ne 0 ]]; then
		WARN="${WHITE}"
	else
		WARN="${RED}"
	fi
	
	PS1="${STATUS}${WHITE}${WARN}\u@\h${WHITE}:${BLUE}\W ${RESET}\$ "
	PS2="> "
}
PROMPT_COMMAND=make_prompt

### PATH: The path that can be traversed is not the eternal path.
export PATH="/usr/local/bin:/var/lib/gems/2.8/bin:/var/lib/gems/1.8/bin:$PATH:$HOME/Scripts:$HOME/.dotfiles/bin:/usr/local/mysql/bin:$HOME/.rvm/bin:$HOME/.local/lib/aws/bin/"

### RVM: Ruby Version Manager
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

### RVM + OSX: Various hacks to make RVM work in OS X 10.8+
OS=`uname`
if [ "$OS" == "Darwin" ]; then
	cd .
	export CC=/usr/bin/gcc-4.2
	export DYLD_LIBRARY_PATH="/usr/local/mysql/lib:$DYLD_LIBRARY_PATH"
fi

### Install Perl modules in HOME with local::lib
[ $SHLVL -eq 1 ] && eval "$(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib)"

### SSH: Quick application of SSH keys to a new host
apply_ssh() {
	/usr/bin/ssh $1 "mkdir -p ~/.ssh && touch ~/.ssh/authorized_keys && chmod go-rwx ~/.ssh ~/.ssh/authorized_keys && cat >> ~/.ssh/authorized_keys" < ~/.ssh/id_*.pub
}

### ANDROID: Make Android SDK work from command line
export ANDROID_SDK=/home/dann/Applications/android-sdk-linux
export NDK=/opt/home/dann/Applications/android-ndk-r8b
export ANDROID_NDK=$NDK
export ANDROID_NATIVE_API_LEVEL=android-16
export PATH=$PATH:$ANDROID_SDK/tools:$ANDROID_SDK/platform-tools

### VAGRANT
export VAGRANT_LOG=warn

### POSTGRESQL
export PATH=${PATH}:/usr/local/Cellar/postgresql/9.3.2/bin
export DYLD_LIBRARY_PATH=/usr/local/Cellar/postgresql/9.3.2/lib:$DYLD_LIBRARY_PATH

### AWSCLI
export PATH=${PATH}:/usr/local/aws/bin
complete -C aws_completer aws


